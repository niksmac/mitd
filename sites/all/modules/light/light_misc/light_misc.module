<?php


function mitd_nid($uid, $op_nid) {

	$query = new EntityFieldQuery();
	$items_nids = array();
	$query->entityCondition('entity_type', 'node')
	  ->entityCondition('bundle', 'proposals')
	  ->propertyCondition('status', 1) // published? yes
	  ->propertyCondition('uid', $uid)
	  ->fieldCondition('field_opportunity', 'nid', $op_nid);
	$result = $query->execute();

	if (isset($result['node'])) {
	  $items_nids = array_keys($result['node']);
	  //$items = entity_load('node', $items_nids);
	}

	return $items_nids;

}

function mitd_opportunity_count($uid) {
	$query = db_select('node', 'n')
	  ->fields('n')
      ->condition('type', 'opportunity')
     ->condition('uid', $uid)
      ->countQuery()
      ->execute()
       ->fetchAssoc();
     return $query['expression'];
}

function mitd_proposals_count($nid) {

  $result = array();
  if (module_exists('views'))
    $result = views_get_view_result('proposals', 'block_2', $nid);

  return count($result);
}

function light_misc_form_alter(&$form, &$form_state, $form_id) {
	global $user;
	switch ($form_id) {
		case "user_login":
		$options = array('attributes' => array('class' => 'on-right'));
		$form['resetlink'] = array(
			'#type' => 'item',
			'#markup' => l('Forgot Password?', 'user/password', $options)
			);
		break;		
	}
}

/**
* Implements hook_menu().
*/
function light_misc_menu() {

	$items['proposal/%'] = array(
    'page callback' => 'light_misc_proposal_shortlisting',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  	);
  	$items['proposal/award/%'] = array(
    'page callback' => 'light_misc_award_proposal',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  	);

  return $items;
}

function light_misc_proposal_shortlisting() {

	//global $path;
	$nid = arg(1);
	$node = node_load($nid);

	$node->field_short_list['und']['0']['value'] = 1;
	field_attach_update('node', $node);
	drupal_set_message(t("@title has been shortlisted",array('@title' => $node->title)));
	drupal_goto();
	return $node;
}

function light_misc_award_proposal() {

	$nid = arg(2);

	$node = node_load($nid);

	$op_nid = $node->field_opportunity['und']['0']['nid'];
	$opportunity_node = node_load($op_nid);	
	$opportunity_node->field_award['und']['0']['value'] = $node->vid;
	$opportunity_node->field_contract_award_date['und']['0']['value'] = date('Y-m-d');		
	field_attach_update('node', $opportunity_node);
    $result = views_get_view_result('proposals', 'block_5', $op_nid);
    foreach ($result as $key => $value) {    	
    	if($value->nid != $nid) {
    		$proposal_view = node_load($value->nid);
            $proposal_view->comment = 1;
    	}
    }

	drupal_set_message(t("@title is awarded",array('@title' => $node->title)));
	drupal_goto();
}

function _check_awarded_opportunity($op_nid) {
	$node = node_load($op_nid);
	if( isset($node->field_award['und']) && $node->field_award['und']['0']['value'] > 0) {
		return true;
	} else {
		return false;
	}
}

/**
 * Implements hook_comment_insert().
 */
function light_misc_comment_insert($comment) {	
  $account = user_load($comment->uid);
  $node = node_load($comment->nid);

  if($node->type == "proposals"){
      $message = message_create('comments_log', array(), $account);
      $wrapper = entity_metadata_wrapper('message', $message);
      $wrapper->field_comment_ref->set($node);
      $wrapper->save();
  }
}

/**
 * Implements hook_node_insert().
 */
// function light_misc_node_insert($node) {	
	
//     $node = node_load($node->nid);     
// 	$op = $node->field_opportunity['und']['0']['nid'];	
// 	$op_node = node_load($op);
// 	$account = $op_node->uid;
	
//   	if($node->type == "proposals"){
//   	if(isset($account))
//       $message = message_create('notify_author_when_proposal_submit', array($account));     
//       $wrapper = entity_metadata_wrapper('message', $message);    
//       //$wrapper->field_proposal_ref->set($node);
//      // $wrapper->field_opportunity_ref->set($op_node);
//       $wrapper->save();
//   }
// }

