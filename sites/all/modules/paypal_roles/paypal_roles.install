<?php

/**
 * @file
 * Install, update and uninstall functions for the paypal_roles module.
 */

/**
 * Implements hook_schema().
 */
function paypal_roles_schema() {
  $schema['paypal_roles_memberships'] = array(
    'description' => 'The memberships table.',
    'export' => array(
      'key' => 'machine_name',
      'identifier' => 'paypal_roles_memberships',
      'export callback' => 'paypal_roles_memberships_export',
    ),
    'fields' => array(
      'machine_name' => array(
        'description' => 'The primary identifier for membership.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The name of the membership.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'Description of the membership.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'description_format' => array(
        'description' => 'Format of description.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'role' => array(
        'description' => 'User Role.',
        'type' => 'int',
        'length' => 10,
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'length' => array(
        'description' => 'Length of Subscription.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'length_type' => array(
        'description' => 'Type of Length.',
        'type' => 'varchar',
        'length' => 1,
        'not null' => TRUE,
        'default' => 'M',
      ),
      'amount' => array(
        'description' => 'Amount of Subscription.',
        'type' => 'float',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'discount_rate' => array(
        'description' => 'Discount Rate.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'discount_role' => array(
        'description' => 'Discount Role.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'currency' => array(
        'description' => 'Currency.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => 'USD',
      ),
      'cycles' => array(
        'description' => 'Billing cycles.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'trial_length' => array(
        'description' => 'Trial Length of Subscription.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'trial_length_type' => array(
        'description' => 'Trial Type of Length.',
        'type' => 'varchar',
        'length' => 1,
        'not null' => TRUE,
        'default' => 'M',
      ),
      'trial_amount' => array(
        'description' => 'Trial Amount of Subscription.',
        'type' => 'float',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Status of membership. Active or not.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'language' => array(
        'description' => 'Language code.',
        'type' => 'varchar',
        'length' => 5,
        'not null' => TRUE,
        'default' => 'N/A',
      ),
      'button_type' => array(
        'description' => 'Button type. Subscription or one-time purchase.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('machine_name'),
  );

  $schema['paypal_roles_payments'] = array(
    'description' => 'The PayPal IPN payments table.',
    'export' => array(
      'key' => 'txn_id',
      'identifier' => 'paypal_roles_payments',
      'export callback' => 'paypal_roles_payments_export',
    ),
    'fields' => array(
      'txn_id' => array(
        'type' => 'varchar',
        'length' => 25,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'item_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'item_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'amount' => array(
        'description' => 'Amount.',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0,
      ),
      'currency' => array(
        'description' => 'Currency.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => 'USD',
      ),
      'post' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
        'serialize' => TRUE,
      ),
      'cancelled' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('txn_id'),
  );

  $schema['paypal_roles_custom_payments'] = array(
    'description' => 'The custom payments table.',
    'export' => array(
      'key' => 'pid',
      'identifier' => 'paypal_roles_custom_payments',
      'export callback' => 'paypal_roles_custom_payments_export',
    ),
    'fields' => array(
      'pid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'User ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'role' => array(
        'description' => 'User Role.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'date' => array(
        'description' => 'Start date of manual subscription.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'length' => array(
        'description' => 'Length of manual subscription.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'length_type' => array(
        'description' => 'Type of Length.',
        'type' => 'varchar',
        'length' => 1,
        'not null' => TRUE,
        'default' => 'M',
      ),
      'amount' => array(
        'description' => 'Amount of payment.',
        'type' => 'float',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'currency' => array(
        'description' => 'Currency.',
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
        'default' => 'USD',
      ),
      'item_id' => array(
        'description' => 'Relationship with Membership.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('pid'),
  );

  $schema['paypal_roles_payer'] = array(
    'description' => 'Switchtable to connect uid with PayPal payer_id.',
    'export' => array(
      'key' => 'payer_id',
      'identifier' => 'paypal_roles_payer',
      'export callback' => 'paypal_roles_payer_export',
    ),
    'fields' => array(
      'payer_id' => array(
        'type' => 'varchar',
        'length' => 25,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('payer_id'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function paypal_roles_uninstall() {
  // Delete paypal_roles variables when module is removed.
  variable_del('paypal_roles_log_failed_ipn');
  variable_del('paypal_roles_validate_primary_email');
  variable_del('paypal_roles_sandbox');
  variable_del('paypal_roles_l_email');
  variable_del('paypal_roles_s_email');
  variable_del('paypal_roles_payment_grace_period');
  variable_del('paypal_roles_s_return');
  variable_del('paypal_roles_s_return_cancel');
  variable_del('paypal_roles_l_return');
  variable_del('paypal_roles_l_return_cancel');
  variable_del('paypal_roles_account_selection');
}

/**
 * Issue #2355135 by ptmkenny: PDO Exception: Numeric value out of range when
 * creating a membership.
 */
function paypal_roles_update_7001() {
  if (db_field_exists('paypal_roles_memberships', 'role')) {
    db_change_field('paypal_roles_memberships', 'role', 'role', array(
      'description' => 'User Role.',
      'type' => 'int',
      'length' => 10,
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
    ));
  }
}

/**
 * Issue #2355277 by ptmkenny: Add selector to choose PayPal login page
 * language/locale creating a membership.
 */
function paypal_roles_update_7002() {
  if (!db_field_exists('paypal_roles_memberships', 'language')) {
    db_add_field('paypal_roles_memberships', 'language', array(
      'description' => 'Language code.',
      'type' => 'varchar',
      'length' => 5,
      'not null' => TRUE,
      'default' => 'US',
    ));

    db_update('paypal_roles_memberships')
        ->fields(array('language' => 'US'))
        ->execute();
  }
}

/**
 * New feature: Ability to cancel/uncancel a payment.
 */
function paypal_roles_update_7003() {
  if (!db_field_exists('paypal_roles_payments', 'cancelled')) {
    db_add_field('paypal_roles_payments', 'cancelled', array(
      'type' => 'int',
      'not null' => TRUE,
      'default' => 0,
    ));

    db_update('paypal_roles_payments')
        ->fields(array('cancelled' => 0))
        ->execute();
  }
}

/**
 * New feature: Ability to create a simple one-time purchase with expiration
 * time too.
 */
function paypal_roles_update_7004() {
  if (!db_field_exists('paypal_roles_memberships', 'button_type')) {
    db_add_field('paypal_roles_memberships', 'button_type', array(
      'description' => 'Button type. Subscription or one-time purchase.',
      'type' => 'int',
      'size' => 'tiny',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
    ));

    db_update('paypal_roles_memberships')
        ->fields(array('button_type' => 1))
        ->condition('length', 0, '>')
        ->execute();

    db_update('paypal_roles_memberships')
        ->fields(array('button_type' => 0))
        ->condition('length', 0, '=')
        ->execute();
  }
}

/**
 * Issue #2375091: Allow PayPal login page language / locale not to be set.
 */
function paypal_roles_update_7005() {
  if (db_field_exists('paypal_roles_memberships', 'language')) {
    db_change_field('paypal_roles_memberships', 'language', 'language', array(
      'description' => 'Language code.',
      'type' => 'varchar',
      'length' => 5,
      'not null' => TRUE,
      'default' => 'N/A',
    ));
  }
}

/**
 * Issue #2374177: Table not found after upgrading.
 */
function paypal_roles_update_7006() {
  if (!db_field_exists('paypal_roles_memberships', 'description')) {
    db_add_field('paypal_roles_memberships', 'description', array(
      'description' => 'Description of the membership.',
      'type' => 'text',
      'not null' => TRUE,
    ));
  }

  if (!db_field_exists('paypal_roles_memberships', 'description_format')) {
    db_add_field('paypal_roles_memberships', 'description_format', array(
      'description' => 'Format of description.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
    ));
  }
}

/**
 * Issue #2398401: PDOException: SQLSTATE[22001]: String data, right truncated:
 * 1406 Data too long for column 'item_id' at row 1.
 */
function paypal_roles_update_7007() {
  if (db_field_exists('paypal_roles_payments', 'item_id')) {
    db_change_field('paypal_roles_payments', 'item_id', 'item_id', array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
    ));
  }
}

/**
 * Create field "item_name", "amount" and "currency" in payments table.
 */
function paypal_roles_update_7008() {
  // Create field item_name.
  if (!db_field_exists('paypal_roles_payments', 'item_name')) {
    db_add_field('paypal_roles_payments', 'item_name', array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'default' => '',
    ));
  }

  // Create field amount.
  if (!db_field_exists('paypal_roles_payments', 'amount')) {
    db_add_field('paypal_roles_payments', 'amount', array(
      'description' => 'Amount.',
      'type' => 'float',
      'not null' => TRUE,
      'default' => 0,
    ));
  }

  // Create field currency.
  if (!db_field_exists('paypal_roles_payments', 'currency')) {
    db_add_field('paypal_roles_payments', 'currency', array(
      'description' => 'Currency.',
      'type' => 'varchar',
      'length' => 3,
      'not null' => TRUE,
      'default' => 'USD',
    ));
  }

  // Fill created fields with data.
  $payments = db_select('paypal_roles_payments', 'p')->fields('p')->execute();
  foreach ($payments as $payment) {
    $payment->post = unserialize($payment->post);
    
    if (isset($payment->post['item_name'])) {
      $payment->item_name = $payment->post['item_name'];
    }

    if (isset($payment->post['payment_gross'])) {
      $payment->amount = $payment->post['payment_gross'];
    }

    if (isset($payment->post['mc_currency'])) {
      $payment->currency = $payment->post['mc_currency'];
    }

    db_update('paypal_roles_payments')->fields(array(
      'item_name' => $payment->item_name,
      'amount' => $payment->amount,
      'currency' => $payment->currency,
    ))->condition('txn_id', $payment->txn_id)->execute();
  }
}

/**
 * Alter table: add field "item_id" to table "paypal_roles_custom_payments".
 */
function paypal_roles_update_7009() {
  if (!db_field_exists('paypal_roles_custom_payments', 'item_id')) {
    db_add_field('paypal_roles_custom_payments', 'item_id', array(
      'description' => 'Relationship with Membership.',
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'default' => '',
    ));
  }
}
